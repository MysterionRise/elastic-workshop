import datetime

from elasticsearch import Elasticsearch

# Password for the 'elastic' user generated by Elasticsearch
ELASTIC_PASSWORD = "elastic"
INDEX_NAME = "movies"

# Create the client instance
client = Elasticsearch(
    "https://localhost:9200",
    ca_certs="certs/ca/ca.crt",
    basic_auth=("elastic", ELASTIC_PASSWORD),
)


def get_chunks(input, size=1000):
    return [input[i : i + size] for i in range(0, len(input), size)]


def read_movie_data(path_to_data):
    # csv
    # pandas
    with open(path_to_data, "r") as f:
        movies = f.readlines()
    print(len(movies))
    errors = 0
    parsed_movies = []
    for movie in movies[1:]:
        try:
            columns = movie.strip().split(",")
            title, year = columns[1].split("(")
            genres = columns[2].split("|")
            parsed_movies.append(
                {"id": columns[0], "title": title, "year": year[:-1], "genres": genres}
            )
        except Exception as e:
            print(e)
            errors += 1
            # silently ignore error TODO fix NEVER DO IN PRODUCTON
            # print(movie)
    print(len(parsed_movies))
    return parsed_movies


def main():
    movies = read_movie_data("data/movies.csv")
    for chunk in get_chunks(movies):
        operations = []
        for movie in chunk:
            operations.append({"index": {"_index": INDEX_NAME, "_id": movie["id"]}})
            operations.append(movie)
        client.bulk(operations=operations, index=INDEX_NAME)


if __name__ == "__main__":
    start = datetime.datetime.now()
    main()
    finish = datetime.datetime.now()
    print(f"Indexing took {finish - start}")

# Successful response!
# response = client.search(
#     index="kibana_sample_data_ecommerce",
#     query={
#         "bool": {
#             "must": [
#                 {"range": {"taxful_total_price": {"lte": 100}}},
#                 {"term": {"geoip.city_name": "Birmingham"}},
#             ]
#         }
#     },
#     aggregations={"cities": {"terms": {"field": "customer_id"}}},
#     size=5,
# )

# response = client.index(document={"field1": "value1"}, index="workshop-day3")

# response = client.indices.refresh(index="workshop-day3")

# response = client.delete(index="workshop-day3", id="1")
# client.indices.refresh(index="workshop-day3")
# print(response)
